Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\jupyter_cache\executors\utils.py", line 51, in single_nb_execution
    executenb(
  File "C:\ProgramData\Anaconda3\lib\site-packages\nbclient\client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "C:\ProgramData\Anaconda3\lib\site-packages\nbclient\util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "C:\ProgramData\Anaconda3\lib\site-packages\nbclient\util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "C:\ProgramData\Anaconda3\lib\asyncio\base_events.py", line 642, in run_until_complete
    return future.result()
  File "C:\ProgramData\Anaconda3\lib\site-packages\nbclient\client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "C:\ProgramData\Anaconda3\lib\site-packages\nbclient\client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\ProgramData\Anaconda3\lib\site-packages\nbclient\client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
t0 = tic()
x1 = F.newton(transform='minmax')
t1 = 100 * toc(t0)
n1 = F.fnorm
------------------

[1;31m---------------------------------------------------------------------------[0m
[1;31mTypeError[0m                                 Traceback (most recent call last)
Input [1;32mIn [6][0m, in [0;36m<cell line: 2>[1;34m()[0m
[0;32m      1[0m t0 [38;5;241m=[39m tic()
[1;32m----> 2[0m x1 [38;5;241m=[39m [43mF[49m[38;5;241;43m.[39;49m[43mnewton[49m[43m([49m[43mtransform[49m[38;5;241;43m=[39;49m[38;5;124;43m'[39;49m[38;5;124;43mminmax[39;49m[38;5;124;43m'[39;49m[43m)[49m
[0;32m      3[0m t1 [38;5;241m=[39m [38;5;241m100[39m [38;5;241m*[39m toc(t0)
[0;32m      4[0m n1 [38;5;241m=[39m F[38;5;241m.[39mfnorm

File [1;32mC:\ProgramData\Anaconda3\lib\site-packages\compecon\nonlinear.py:202[0m, in [0;36mNLP.newton[1;34m(self, x0, **kwargs)[0m
[0;32m    200[0m [38;5;28mself[39m[38;5;241m.[39mopts[38;5;241m.[39mprint_header()
[0;32m    201[0m [38;5;28;01mfor[39;00m it [38;5;129;01min[39;00m [38;5;28mrange[39m(maxit):
[1;32m--> 202[0m     fx, J [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mf[49m[43m([49m[43mx[49m[43m)[49m
[0;32m    203[0m     [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m issparse(J):  [38;5;66;03m#with sparse matrices doesn't work nice[39;00m
[0;32m    204[0m         J [38;5;241m=[39m np[38;5;241m.[39matleast_2d(J)

File [1;32mC:\ProgramData\Anaconda3\lib\site-packages\compecon\nonlinear.py:490[0m, in [0;36mMCP._ssmooth[1;34m(self, x)[0m
[0;32m    487[0m     J [38;5;241m=[39m np[38;5;241m.[39matleast_2d(J)
[0;32m    489[0m [38;5;28;01mif[39;00m np[38;5;241m.[39many(L):  [38;5;66;03m# apply the Fischer + transform[39;00m
[1;32m--> 490[0m     fx[L], J[:, L] [38;5;241m=[39m fischer([43mfx[49m[43m[[49m[43mL[49m[43m][49m, da[L], J[:, L], I[:, L])
[0;32m    491[0m [38;5;28;01mif[39;00m np[38;5;241m.[39many(U):  [38;5;66;03m# apply the Fischer - transform[39;00m
[0;32m    492[0m     fx[U], J[:, U] [38;5;241m=[39m fischer(fx[U], db[U], J[:, U], I[:, U], [38;5;28;01mFalse[39;00m)

[1;31mTypeError[0m: only integer scalar arrays can be converted to a scalar index
TypeError: only integer scalar arrays can be converted to a scalar index

